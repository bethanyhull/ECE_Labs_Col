   1              	# file: gpio_d.s
   2              	# author: Bethany Hull
   3              	
   4              	.include "macros.inc"
   1              	# file: macros.inc
   2              	
  34              	  .list
   5              	.include "gpio_regs.inc"
   1              	# file: gpio_regs.inc
   2              	# author: Bethany Hull
   3              	
   4              	.equ GPIOA_BASE,0X40020000
   5              	.equ GPIOB_BASE,0x40020400
   6              	.equ GPIOC_BASE,0X40020800
   7              	.equ GPIOD_BASE,0x40020C00
   8              	.equ GPIOE_BASE,0x40021000
   9              		
  10              	.equ GPIO_MODER,0x00
  11              	.equ GPIO_OTYPER,0x04
  12              	.equ GPIO_OSPEEDR,0X08
  13              	.equ GPIO_PUPDR,0x0C
  14              	.equ GPIO_IDR,0x10
  15              	.equ GPIO_ODR,0x14
  16              	.equ GPIO_BSRR,0x18
  17              	.equ GPIO_LCKR,0x1C
  18              	.equ GPIO_AFRL,0x20
  19              	.equ GPIO_AFRH,0x24
   6              	
   7              	SET_TARGET
   8              	
   9              	.text             
  10              	
  11              	FUNCTION gpio_d_init,global			// initialize all 16 bits of Port D to outputs
  12 0000 00B5     	  push {lr}
  13              	
  14 0002 4FF00300 	  mov r0,#3					// send 3 as argument to rcc_gpio_enable function
  15 0006 FFF7FEFF 	  bl rcc_gpio_enable				// call rcc_gpio_enable
  16              		
  17 000a 054B     	  ldr r3,=#GPIOD_BASE				// load r3 with base address of GPIO PORT D
  18              	
  19 000c 054A     	  ldr r2,=#0x00000000				// load 0 into r2
  20 000e DA60     	  str r2,[r3,#GPIO_PUPDR]			// write 0 to GPIO Port D PUPD register
  21 0010 5A60     	  str r2,[r3,#GPIO_OTYPER]			// write 0 to GPIO Port D TYPEregister
  22 0012 5A61     	  str r2,[r3,#GPIO_ODR]				// write 0 to GPIO Port D output data register
  23              	
  24 0014 044A     	  ldr r2,=#0x55555555				// set all 16 bits of port D to outputs
  25 0016 1A60     	  str r2,[r3,#GPIO_MODER]	
  26              	
  27 0018 044A     	  ldr r2,=#0xffffffff				// write 0xffffffff to Port D register
  28              	
  29 001a 5DF804EB 	  pop {lr}
  30              	
  31 001e 7047     	  bx lr
  32              	    
  33 0020 000C0240 	ENDFUNC gpio_d_init
  33      00000000 
  33      55555555 
  33      FFFFFFFF 
  34              	
  35              	FUNCTION gpio_d_put,global			// put a value out to the 16 bits of Port D outputs
  36              	  
  37 0030 00B5     	  push {lr}
  38              	
  39 0032 024B     	  ldr r3,=#GPIOD_BASE				// load r3 with base address of GPIO Port D
  40              	
  41 0034 5861     	  str r0,[r3,#GPIO_ODR]				// write to (function argument) to GPIO Port D output
  42              	
  43 0036 5DF804EB 	  pop {lr}
  44              	
  45 003a 7047     	  bx lr
  46              	
  47 003c 000C0240 	ENDFUNC gpio_d_put
  48              	
  49              	FUNCTION gpio_d_get_current,global	// get the current state of the 16 port D outputs
  50 0040 00B5     	  push {lr}
  51              	
  52 0042 024B     	  ldr r3,=#GPIOD_BASE				// load r3 with the base address of GPIO Port D
  53              	
  54 0044 5869     	  ldr r0,[r3,#GPIO_ODR]				// load r0 with GPIO Port D output data register
  55              	
  56 0046 5DF804EB 	  pop {lr}
  57              	
  58 004a 7047     	  bx lr
  59              	
  60 004c 000C0240 	ENDFUNC gpio_d_get_current
  61              	
  62              	.end
DEFINED SYMBOLS
                            *ABS*:00000001 ctxm4
   src/gpio_regs.inc:4      *ABS*:40020000 GPIOA_BASE
   src/gpio_regs.inc:5      *ABS*:40020400 GPIOB_BASE
   src/gpio_regs.inc:6      *ABS*:40020800 GPIOC_BASE
   src/gpio_regs.inc:7      *ABS*:40020c00 GPIOD_BASE
   src/gpio_regs.inc:8      *ABS*:40021000 GPIOE_BASE
   src/gpio_regs.inc:10     *ABS*:00000000 GPIO_MODER
   src/gpio_regs.inc:11     *ABS*:00000004 GPIO_OTYPER
   src/gpio_regs.inc:12     *ABS*:00000008 GPIO_OSPEEDR
   src/gpio_regs.inc:13     *ABS*:0000000c GPIO_PUPDR
   src/gpio_regs.inc:14     *ABS*:00000010 GPIO_IDR
   src/gpio_regs.inc:15     *ABS*:00000014 GPIO_ODR
   src/gpio_regs.inc:16     *ABS*:00000018 GPIO_BSRR
   src/gpio_regs.inc:17     *ABS*:0000001c GPIO_LCKR
   src/gpio_regs.inc:18     *ABS*:00000020 GPIO_AFRL
   src/gpio_regs.inc:19     *ABS*:00000024 GPIO_AFRH
        src/gpio_d.s:11     .text:00000000 gpio_d_init
        src/gpio_d.s:11     .text:00000000 $t
        src/gpio_d.s:33     .text:00000020 $d
        src/gpio_d.s:35     .text:00000030 gpio_d_put
        src/gpio_d.s:35     .text:00000030 $t
        src/gpio_d.s:47     .text:0000003c $d
        src/gpio_d.s:49     .text:00000040 gpio_d_get_current
        src/gpio_d.s:49     .text:00000040 $t
        src/gpio_d.s:60     .text:0000004c $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
rcc_gpio_enable
